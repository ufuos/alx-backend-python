#!/usr/bin/env bash
# kurbeScript - start a local minikube cluster, verify cluster, and list pods
# Usage: ./kurbeScript
# Designed for Linux/macOS/WSL. Adjust driver accordingly if you use Hyper-V/VirtualBox.

set -euo pipefail

# Helper: print message
info() { echo -e "\n[INFO] $*"; }
warn() { echo -e "\n[WARN] $*"; }
err() { echo -e "\n[ERROR] $*" >&2; exit 1; }

# 1) Check for minikube
if ! command -v minikube >/dev/null 2>&1; then
  warn "minikube not found. Please install minikube first: https://minikube.sigs.k8s.io/docs/start/"
  err "Aborting: minikube is required."
fi

# 2) Check for kubectl
if ! command -v kubectl >/dev/null 2>&1; then
  warn "kubectl not found. Please install kubectl first: https://kubernetes.io/docs/tasks/tools/"
  err "Aborting: kubectl is required."
fi

# 3) Try to pick a driver
PREFERRED_DRIVER="docker"
if minikube config get driver >/dev/null 2>&1; then
  # keep existing config
  info "Existing minikube driver: $(minikube config get driver || echo 'unknown')"
else
  # attempt to set docker driver if docker exists
  if command -v docker >/dev/null 2>&1 && docker info >/dev/null 2>&1; then
    info "Setting minikube driver to 'docker' for faster local setup"
    minikube config set driver docker || warn "couldn't set config driver; continuing"
  else
    warn "Docker not available. Minikube will pick a default driver (may prompt or fail)."
  fi
fi

# 4) Start minikube
info "Starting minikube (this may take a couple minutes)..."
# Use --wait to ensure minikube is ready. Remove --driver if you want default.
minikube start --driver="$PREFERRED_DRIVER" --wait=all || {
  warn "minikube start failed with driver '$PREFERRED_DRIVER'. Trying without driver override..."
  minikube start --wait=all || err "minikube failed to start. Check virtualization/docker status."
}

# 5) Verify cluster using kubectl cluster-info
info "Verifying Kubernetes cluster..."
kubectl cluster-info || err "kubectl cluster-info failed â€” cluster may not be running."

# 6) Show minikube status and context
info "Minikube status and context:"
minikube status || warn "couldn't read minikube status."
kubectl config current-context || warn "couldn't read current kubectl context."

# 7) Wait a moment then list pods in all namespaces
info "Listing pods in all namespaces (may show system pods like kube-system, coredns, etc.)"
kubectl get pods -A || warn "kubectl get pods returned non-zero exit code."

# Helpful tip to view dashboard (optional)
info "You can open the Kubernetes dashboard with: minikube dashboard"

info "kurbeScript completed successfully."
exit 0
